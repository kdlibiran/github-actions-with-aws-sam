on:
  push:
    branches:
      - main
jobs:
  build-deploy:
    strategy:
      matrix:
        app: ['github-actions-with-aws-sam', 'new-app']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # sam build 
      - name: SAM build
        working-directory: ./${{ matrix.app }}
        run: sam build --use-container

      # Calculate hash of SAM application files
      - name: Calculate SAM app hash
        id: sam-hash
        working-directory: ./${{ matrix.app }}
        run: |
          HASH=$(find . -type f -not -path "./.git/*" -not -path "./.github/*" -exec sha256sum {} \; | sort | sha256sum | cut -d' ' -f1)
          echo "sam_hash=$HASH" >> $GITHUB_OUTPUT

      # Get previous hash from SSM Parameter Store
      - name: Get previous hash
        id: previous-hash
        continue-on-error: true
        run: |
          PREV_HASH=$(aws ssm get-parameter --name "/${{ matrix.app }}/deployment-hash" --query "Parameter.Value" --output text || echo "none")
          echo "prev_hash=$PREV_HASH" >> $GITHUB_OUTPUT

      # sam deploy (only if hash changed)
      - name: Deploy SAM application
        if: steps.previous-hash.outputs.prev_hash != steps.sam-hash.outputs.sam_hash
        working-directory: ./${{ matrix.app }}
        run: |
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
            --stack-name ${{ matrix.app }} \
            --s3-bucket sam-bucket-test-kyle \
            --capabilities CAPABILITY_IAM \
            --region ap-southeast-1

      # Store new hash in SSM Parameter Store
      - name: Store new hash
        if: steps.previous-hash.outputs.prev_hash != steps.sam-hash.outputs.sam_hash
        run: |
          aws ssm put-parameter \
            --name "/${{ matrix.app }}/deployment-hash" \
            --value "${{ steps.sam-hash.outputs.sam_hash }}" \
            --type String \
            --overwrite

      # Run Unit tests
      - name: Run unit tests
        working-directory: ./${{ matrix.app }}
        run: |
          pip install -r tests/requirements.txt
          python -m pytest tests/unit/
