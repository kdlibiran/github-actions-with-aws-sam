on:
  push:
    branches:
      - main
      - development
jobs:
  wait-for-approval:
    runs-on: ubuntu-latest
    environment: ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/development' && 'dev') }}
    steps:
      - name: Approve deployment
        run: echo "Deployment approved"
  get-apps:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.read_apps.outputs.apps }}
    steps:
      - uses: actions/checkout@v2
      - name: Read apps config
        id: read_apps
        run: |
          # Extract just the array part from the YAML
          echo "apps=$(yq eval '.apps[]' config/apps.yml | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
  build-deploy:
    needs: [wait-for-approval, get-apps]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.get-apps.outputs.apps) }}
        environment:
          - ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/development' && 'dev') }}
    steps:
      - name: Read apps config
        id: read_apps
        run: echo "apps=$(cat config/apps.yml)" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # Calculate hash of SAM application files
      - name: Calculate SAM app hash
        id: sam-hash
        working-directory: ./${{ matrix.app }}
        run: |
          HASH=$(find . -type f -not -path "./.git/*" -not -path "./.github/*" -exec sha256sum {} \; | sort | sha256sum | cut -d' ' -f1)
          echo "sam_hash=$HASH" >> $GITHUB_OUTPUT

      # Get previous function hash from Lambda
      - name: Get previous hash
        id: previous-hash
        continue-on-error: true
        run: |
          # Get the function name from SAM template
          FUNCTION_NAME="${{ matrix.environment }}-${{ matrix.app }}"
          PREV_HASH=$(aws lambda get-function --function-name $FUNCTION_NAME --query 'Configuration.CodeSha256' --output text || echo "none")
          echo "prev_hash=$PREV_HASH" >> $GITHUB_OUTPUT

      # sam build and deploy
      - name: Build and Deploy SAM application
        if: steps.previous-hash.outputs.prev_hash == 'none' || steps.previous-hash.outputs.prev_hash != steps.sam-hash.outputs.sam_hash
        working-directory: ./${{ matrix.app }}
        run: |
          sam build --use-container
          
          # Create a unique bucket name using the app, environment, and a timestamp
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BUCKET_NAME="${{ matrix.environment }}-${{ matrix.app }}-${TIMESTAMP}-sam"
          
          # Create S3 bucket explicitly
          aws s3api create-bucket \
            --bucket $BUCKET_NAME \
            --region ap-southeast-1 \
            --create-bucket-configuration LocationConstraint=ap-southeast-1
          
          # Override samconfig.toml settings
          sam deploy --debug \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --stack-name ${{ matrix.environment }}-${{ matrix.app }} \
            --capabilities CAPABILITY_IAM \
            --region ap-southeast-1 \
            --parameter-overrides Environment=${{ matrix.environment }} Application=${{ matrix.app }} \
            --tags Application=${{ matrix.app }} Environment=${{ matrix.environment }} \
            --s3-bucket $BUCKET_NAME \
            --config-env custom \
            --no-resolve-s3
          
          # Delete the bucket after deployment
          aws s3 rb s3://$BUCKET_NAME --force
          